@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SnipEx.Web.ViewModels.User
@model UserConnectionsViewModel

@{
    ViewData["Title"] = "Connections";
}

<div class="connections-container">
    <div class="connections-content">
        <section class="connections-header">
            <h1>Connections</h1>
            <div class="connections-stats">
                <div class="stat-item">
                    <span class="stat-number">@Model.ConnectionsCount</span>
                    <span class="stat-label">Connections</span>
                </div>
            </div>
        </section>

        <div class="filter-bar">
            <button class="filter-button active" data-filter="all">All</button>
            <button class="filter-button" data-filter="connected">Connected</button>
            <button class="filter-button" data-filter="mutual">Mutual</button>
        </div>

        <div class="connections-list">
            @if (Model.Connections.Any())
            {
                @foreach (var connection in Model.Connections)
                {
                    <div class="connection-item @connection.CssType">
                        <div class="connection-avatar">
                            <img src="@connection.ActorAvatar">
                        </div>

                        <div class="connection-content">
                            <div class="connection-header">
                                <div class="connection-name">
                                    <span>@connection.Username</span>
                                    <span class="connection-badge @connection.CssType">
                                        @connection.CssType.ToUpper()
                                    </span>
                                </div>

                                <div class="connection-actions">
                                    <button class="connect-button @connection.ButtonCssClass"
                                            data-target-user-id="@connection.TargetUserId">
                                        @connection.ButtonText
                                    </button>
                                </div>
                            </div>

                            <div class="connection-meta">
                                <span class="meta-item"><i class="fa-solid fa-code"></i> @connection.PostsCount snippets</span>
                                <span class="meta-item"><i class="fa-solid fa-thumbs-up"></i> @connection.LikesCount likes</span>
                                <span class="meta-item"><i class="fa-solid fa-users"></i> @connection.MutualConnectionsCount mutual connections</span>
                            </div>
                        </div>
                    </div>
                }

                @if (Model.Pagination.TotalPages > 1)
                {
                    <div class="pagination-container">
                        <div class="pagination-info">
                            <span>Showing @Model.Pagination.StartItem-@Model.Pagination.EndItem of @Model.Pagination.TotalItems connections</span>
                        </div>
                        <nav class="pagination-nav" aria-label="Connections pagination">
                            <ul class="pagination">
                                <li class="page-item @(!Model.Pagination.HasPrevious ? "disabled" : "")">
                                    @if (Model.Pagination.HasPrevious)
                                    {
                                        <a class="page-link" href="?page=@(Model.Pagination.CurrentPage - 1)" aria-label="Previous">
                                            <i class="fa-solid fa-chevron-left"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="page-link" aria-label="Previous">
                                            <i class="fa-solid fa-chevron-left"></i>
                                        </span>
                                    }
                                </li>

                                @foreach (var pageNumber in Model.Pagination.GetPageNumbers())
                                {
                                    <li class="page-item @(pageNumber == Model.Pagination.CurrentPage ? "active" : "")">
                                        @if (pageNumber == Model.Pagination.CurrentPage)
                                        {
                                            <span class="page-link current">@pageNumber</span>
                                        }
                                        else
                                        {
                                            <a class="page-link" href="?page=@pageNumber">@pageNumber</a>
                                        }
                                    </li>
                                }

                                <li class="page-item @(!Model.Pagination.HasNext ? "disabled" : "")">
                                    @if (Model.Pagination.HasNext)
                                    {
                                        <a class="page-link" href="?page=@(Model.Pagination.CurrentPage + 1)" aria-label="Next">
                                            <i class="fa-solid fa-chevron-right"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="page-link" aria-label="Next">
                                            <i class="fa-solid fa-chevron-right"></i>
                                        </span>
                                    }
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            }
            else
            {
                <div class="empty-state">
                    <i class="fa-regular fa-bell-slash"></i>
                    <p>No connections yet</p>
                    <span>When you receive connections, they'll appear here.</span>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/profile/connections.js" asp-append-version="true"></script>
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/profile/connections.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/profile/pagination.css" asp-append-version="true">
}