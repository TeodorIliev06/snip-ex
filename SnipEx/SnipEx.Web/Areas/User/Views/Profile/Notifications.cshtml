@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SnipEx.Web.ViewModels.Notification
@model UserNotificationsViewModel

@{
    ViewData["Title"] = "Notifications";
}

<div class="notifications-container">
    <div class="notifications-content">
        <section class="notifications-header">
            <h1>Notifications</h1>
        </section>

        <div class="filter-bar">
            <button class="filter-button" data-filter="all">All</button>
            <button class="filter-button" data-filter="mention">Mentions</button>
            <button class="filter-button" data-filter="like">Likes</button>
            <button class="filter-button" data-filter="comment">Comments</button>
            <button class="filter-button" data-filter="connection">Connections</button>
        </div>

        <div class="notifications-list">
            @if (Model.Notifications.Any())
            {
                @foreach (var notification in Model.Notifications)
                {
                    <div class="notification-item @notification.CssType" data-id="@notification.Id">
                        <div class="notification-avatar">
                            <a asp-area="User" asp-controller="Profile" asp-action="Index"
                               asp-route-id="@notification.ActorId">
                                <img src="@notification.ActorAvatar">
                            </a>
                        </div>
                        <div class="notification-content">
                            <div class="notification-text">
                                @notification.Message
                            </div>
                            <div class="notification-meta">
                                <span class="notification-time"
                                      data-timestamp="@notification.CreatedAt">
                                    @notification.CreatedAt
                                </span>
                            </div>
                        </div>
                        @if (!notification.IsRead)
                        {
                            <div class="notification-badge">
                                <span class="unread-indicator"></span>
                            </div>
                        }
                    </div>
                }

                <partial name="_PaginationPartial" model="(Model.Pagination, Model.CurrentFilter, Model.FilteredNotificationsCount)" />
            }
            else
            {
                <div class="empty-state">
                    <i class="fa-regular fa-bell-slash"></i>
                    <p>No notifications yet</p>
                    <span>When you receive notifications, they'll appear here.</span>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/profile/notifications.js" asp-append-version="true"></script>
    <script src="~/js/profile/pagination.js" asp-append-version="true"></script>
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/profile/notifications.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/profile/pagination.css" asp-append-version="true">
}
